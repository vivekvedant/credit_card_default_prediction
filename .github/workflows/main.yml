name: 

on:
 
  push:
    branches: 
      - main 
  workflow_dispatch:

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: credit-default-data-versioning-repository
        image_tag: "v.${{ github.run_number }}"
      run: |
        echo "$ECR_REGISTRY"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$image_tag .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$image_tag
  
  deploy:
    needs: build
    name: Build infra and deploy image
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      # working-directory: terraform 
      run: terraform -chdir=terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform validate
      run: terraform -chdir=terraform validate

      
    - name: Terraform Apply
      run: terraform -chdir=terraform apply -auto-approve 
      env:
        TF_VAR_aws_access_key_id : ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        TF_VAR_mongodb_url: ${{ secrets.MONGODB_URL }}
        TF_VAR_image_tag: "v.${{ github.run_number }}"